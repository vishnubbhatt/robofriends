{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","cardsArray","map","user","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobot","filter","toLowerCase","includes","length","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,WCLL,SAASI,EAAT,GAA6B,IAAVC,EAAS,EAATA,OACxBC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OAAQ,cAAC,EAAD,CAEIX,GAAIO,EAAOI,GAAKX,GAChBC,KAAMM,EAAOI,GAAKV,KAClBC,MAAOK,EAAOI,GAAKT,OAHdK,EAAOI,GAAKX,OAOjC,OACI,8BACKQ,ICbE,SAASI,EAAT,GAAgD,EAA5BC,YAA6B,IAAhBC,EAAe,EAAfA,aAC5C,OACI,8BACI,uBACIX,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,M,MCPX,SAASI,EAAOC,GAC3B,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,W,ICHEC,E,kDACjB,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAGG,KAAKJ,MAAMC,SACH,4DAEJG,KAAKX,MAAMK,a,GAhBgBQ,aCMrBC,E,kDACjB,aAAc,IAAD,8BACT,gBAMJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAN1C,EAAKX,MAAQ,CACTnB,OAAQ,GACRM,YAAc,IAJT,E,qDAWb,WAAoB,IAAD,OACfyB,MAAM,8CACL7C,MAAK,SAAA8C,GACF,OAAOA,EAASC,UAEnB/C,MAAK,SAAAgD,GACF,EAAKV,SAAS,CAACxB,OAAQkC,S,oBAK/B,WACI,MAA+BX,KAAKJ,MAA7BnB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YAET6B,EAAgBnC,EAAOoC,QAAQ,SAAApC,GACjC,OAAQA,EAAON,KAAK2C,cAAcC,SAAShC,EAAY+B,kBAG3D,OAAIrC,EAAOuC,OAKH,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAACS,EAAD,CAAWE,aAAegB,KAAKI,iBAC/B,cAAChB,EAAD,UACI,cAAC,EAAD,UACI,cAACZ,EAAD,CAAUC,OAAQmC,WAT3B,gD,GA/BcK,IAAMf,WCDvCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.203668fc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?500x500`}></img>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\nexport default function CardList({robots}) {\n    const cardsArray = robots.map((user, key) =>{\n        return (<Card \n                    key={robots[key].id} \n                    id={robots[key].id} \n                    name={robots[key].name} \n                    email={robots[key].email}\n                />\n        )\n    })\n    return (\n        <div>\n            {cardsArray}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function SearchBox({searchField, searchChange}) {\n    return (\n        <div>\n            <input\n                className='pa3 ba b--green bg-lightest-blue' \n                type=\"search\" \n                placeholder=\"Search Robots\"\n                onChange={searchChange} \n            />\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Scroll(props) {\n    return (\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px' }}>\n            {props.children}\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class ErrorBoundry extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({ hasError: true})\n    }\n\n    render() {\n        if(this.state.hasError){\n            return <h1>Ooooops. That is not good.</h1>\n        }\n        return this.props.children\n    }\n}\n","import React from 'react'\nimport {robots} from '../robots'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport './App.css'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\n\nexport default class App extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchField : ''\n        }\n    }\n    onSearchChange = (event) => { \n        this.setState({ searchField: event.target.value })\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => {\n            return response.json() \n        })\n        .then(users => {\n            this.setState({robots: users})\n        })\n        \n    }\n\n    render(){\n        const {robots, searchField } = this.state; // Destructuring....\n\n        const filteredRobot = robots.filter( robots =>{\n            return (robots.name.toLowerCase().includes(searchField.toLowerCase()));\n        })\n\n        if(!robots.length){\n            return <h1>Loading...</h1>\n        }\n        else{\n            return (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange= {this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobot}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n        }\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport App from './containers/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}